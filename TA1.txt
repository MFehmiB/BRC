TA 1.1a)

Zeile 1:  Auf #include folgt "stdio.h" statt <stdio.h>. "" würde auch gehen, aber führt zu minimalen Verzögerungen da im current dir usw. erst gesucht, und dann im dir von <> gesucht wird.
Zeile 2 & 3:  Semikolon bei #define - der Präprozessor ersetzt hier die Zahlen nicht mit "2015", sondern "2015;"
Zeile 6:  int year kann nicht in for-Schleife deklariert werden. Muss vorher deklariert werden. Rechtschreibfehler bei MAX_YAER.
Zeile 7:  Semikolon nach if-statement
Zeile 7:  "=" anstatt "==" im if-statement
Zeile 8: Funktionen müssen vor der Main()-Methode stehen, da sie sonst nicht gefunden werden. 
Zeile 10: Fehlendes Semikolon am Ende der Zeile
          Fehlende schließende Klammer "}" für for-Schleife
Zeile 11: fehlendes return 0 statement
 Zeile 13: Int sollte klein "int" sein. 

TA 1.1b)

Zeile 8:  Fehlende seperate Deklaration von char*-Variable buff
          Bei malloc wird die Länge des ersten String als Parameter übergeben. Der erste String ist aber der Programmname. Stattdessen müsste der zweite String an index 1 benutzt werden.
          Folgefehler in Zeilen 10 und 11, wo wieder argv[0] benutzt wird.
Zeile 10: sizeof wird anstatt strlen benutzt. Die Rückgabe von sizeof ist um eins größer als die von strlen
Zeile 11: Durch *buff++ wird die Variable, auf die


TA 1.3

a) Löscht theoretisch alle Dateien auf dem Dateisystem. rm = löschen, -f = force: ignoriere fehlende Dateien und frage nicht vor dem Löschen einer Datei nach, -r = recursive: auch Unterordner und deren Dateien löschen.
Jedoch wird root von rm besonders behandelt, daher wird es ohne die zusätzliche Option --no-preserve-root gar nichts machen.

b) Top zeigt alle laufenden Prozesse. -n 10 definiert, dass Top nur 10 frames zeigt und dann terminiert. -u root definiert, dass nur Prozesse des root Users angezeigt werden.

c) Wird man eine Zahl als Argument gegeben, schaut es nur in der entsprechenden section nach dem übergebenen Programm. man hat 8 sections, in denen die Anleitungen aller Programme thematisch eingeordnet werden.
man 1 errno schaut in der ersten section nach der Anleitung für errno, was es jedoch nicht findet.
man 3 errno schaut in der dritten section nach der Anleitung für errno, wo diese auch tatsächlich liegt.

d) chmod ändert die Nutzungsrechte einer Datei. Die neuen Rechte werden als Oktalzahl eingegeben,
wobei die erste Ziffer die Rechte des Besitzers, die zweite die Rechte der Filegroup, die dritte die Rechte aller anderen Benutzer darstellt.
Die einzelnen Ziffern setzen sich wie folgt zusammen: 4 steht für Lese-, 2 für Schreib- und 1 für Ausführungsrechte. Diese werden addiert.
HelloWorld ist der Name der Datei, deren Rechte verändert werden sollen. sudo gibt dem command Administratorrechte, sodass auch die Rechte von Dateien,
die root gehören, verändert werden können.
Hier wird dem Besitzer von HelloWorld alle drei Rechte (7), der Filegroup Schreib- und Ausführungsrechte (3), und allen anderen Benutzern Leserechte verliehen.

e) wget ist ein Befehl, mit dem direkt aus der Shell Downloads von FTP- oder HTTP-Servern getätigt werden können.
Danach folgt die URL zu der gewünschten Datei. Diese wird jetzt heruntergeladen.
Semikola trennen verschiedene Shell-Befehle voneinander, das heißt hier beginnt ein neuer Befehl.
tar ist ein Programm zum (de-)archivieren von Dateien. Hier wird die heruntergeladene Datei dearchiviert, was durch den Parameter x angegeben wird.
Der Parameter J sagt dem Programm, dass es zusätzlich ein anderes Programm "xz" zum dekomprimieren nutzen soll. f zeigt an, dass nun der Dateiname folgt.
grep durchsucht Dateien nach bestimmten Textstellen. Hier wird die vorher entpackte Datei nach dem String 'fuck\|shit' durchsucht, wobei "\" das Zeichen danach escaped (grep arbeitet mit REGEX).
Der Parameter -o gibt an, dass nur der passende String ausgegeben werden soll. -R gibt an, dass alle Unterverzeichnisse rekursiv durchsucht werden. --include=*.[hcS] gibt an, dass nur Dateien,
deren Name die Form des REGEX *.[hcS] hat, durchsucht werden. Der REGEX setzt sich wie folgt zusammen: * (= beliebige Zeichen), . , [hcS] (= eines der Zeichen in den brackets).
